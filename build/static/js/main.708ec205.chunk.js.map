{"version":3,"sources":["components/HOCs/dialigHOC.jsx","reportWebVitals.js","components/header.jsx","components/main.jsx","store/profile/action.js","components/profile/profile.jsx","store/chats/messages/actions.js","components/chats/message.jsx","store/chats/messages/selector.js","components/chats/messageList.jsx","store/chats/chat/selectors.js","components/chats/dialog.jsx","components/chats/Chat.jsx","store/chats/chat/actions.js","components/chats/ChatList.jsx","App.js","store/profile/reducer.js","store/chats/chat/reducer.js","store/chats/messages/reducer.js","store/store.js","index.js"],"names":["Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","header","marginBottom","spacing","padding","display","flexDirection","justifyContent","alignItems","paper","marginRight","Header","classes","useState","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","AppBar","position","className","Box","to","style","color","Button","ref","undefined","onClick","prevOpen","fontSize","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","Main","SET_GENDER_MALE","SET_GENDER_FEMALE","SET_GENDER_OTHER","root","maxWidth","media","height","button","margin","Profile","dispatch","useDispatch","gender","useSelector","state","value","setValue","genderValue","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","onSubmit","FormControl","FormLabel","RadioGroup","name","onChange","row","FormControlLabel","control","Radio","label","type","ADD_MESSAGE","DELETE_MESSAGE","DELETE_MESSAGES_BY_CHAT_ID","BOT_MESSAGE","addMessage","message","payload","deleteButton","Message","props","item","bothId","useParams","chatId","ListItem","author","text","deleteMessageById","HighlightOff","getMessageList","messages","getMessageListRoot","messageList","list","border","MessageList","List","map","getChatListRoot","chats","getChatList","paddingLeft","input","flexGrow","Dialog","chat","setKey","messageListFull","console","log","inputRef","getMessageId","useEffect","focus","length","tail","Grid","container","direction","sx","sendMessage","InputBase","Send","find","src","alt","Chat","updateUserList","ListItemText","ADD_CHAT","DELETE_CHAT","ChatList","userList","deleteChat","deleteMessagesByChatId","nanoid","prompt","center","App","Container","path","element","exact","initialState","persistConfig","storage","allReducers","combineReducers","profile","action","chatList","newChatList","filter","newMessage","chatIdForDeleteMessage","messageId","messageListForDelete","messageIndex","findIndex","splice","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","store","loading","document","getElementById"],"mappings":"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","file":"static/js/main.708ec205.chunk.js","sourcesContent":["import { React } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getChatList } from \"../../store/chats/chat/selectors\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { getMessageList } from \"../../store/chats/messages/selector\";\n\n\n\nexport const chatCheckedHOC = (Component) => {\n    let WrapperContainer = (props) => {\n        const { chatId } = useParams();\n        const chatList = useSelector(getChatList);\n        const chat = chatList.find((item) => item.id == chatId);\n\n        if (!chat) {\n            return (\n                <>\n                    <Button ><Link to=\"/chats\">Back to chats</Link></Button>\n                    <img src=\"https://previews.123rf.com/images/kaymosk/kaymosk1804/kaymosk180400006/100130939-error-404-page-not-found-error-with-glitch-effect-on-screen-vector-illustration-for-your-design-.jpg\" alt=\"Page not found\" />\n                </>\n            )\n        }\n        return <Component {...props} chat={chat} />\n    }\n    return WrapperContainer;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { React, useState, useRef } from \"react\";\nimport { AppBar, Box, Button, Popper, Grow, Paper, ClickAwayListener, MenuList, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(3),\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\nexport const Header = () => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const anchorRef = useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n    return (\n        <AppBar position={'static'} className={classes.header}>\n            <Box><Link to=\"/\"><HomeIcon style={{ color: 'white' }} /></Link></Box>\n            <Box >\n                <Button\n                    ref={anchorRef}\n                    aria-controls={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                >\n                    <MenuIcon style={{ color: 'white' }} fontSize=\"large\" />\n                </Button>\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={handleClose}>\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                        <MenuItem onClick={handleClose}><Link to=\"/profile\">Profile</Link></MenuItem>\n                                        <MenuItem onClick={handleClose}><Link to=\"/chats\">Chats</Link></MenuItem>\n                                    </MenuList>\n                                </ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </Box>\n        </AppBar>\n    );\n};","import { React } from \"react\";\n\n\nexport const Main = () => {\n    return (\n        <div>\n            <h1> Home </h1>\n        </div>\n    );\n};","export const SET_GENDER_MALE = \"SET_GENDER_MALE\";\nexport const SET_GENDER_FEMALE = \"SET_GENDER_FEMALE\";\nexport const SET_GENDER_OTHER = \"SET_GENDER_OTHER\";","import { React, useRef, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardMedia, Typography, FormControl, FormControlLabel, FormLabel, RadioGroup, Radio, Button } from '@material-ui/core/';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SET_GENDER_FEMALE, SET_GENDER_MALE, SET_GENDER_OTHER } from \"../../store/profile/action\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 400,\n    },\n    media: {\n        height: 300,\n    },\n    button: {\n        margin: theme.spacing(1, 1, 0, 0),\n    }\n}));\n\nexport const Profile = () => {\n    const dispatch = useDispatch();\n    const gender = useSelector((state) => state.gender);\n    const classes = useStyles();\n    const [value, setValue] = useState(gender);\n    const genderValue = useRef(null);\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    const handleClick = () => {\n        if (value == \"male\") {\n            dispatch({ type: SET_GENDER_MALE });\n        } else if (value == \"female\") {\n            dispatch({ type: SET_GENDER_FEMALE });\n        } else if (value == \"other\") {\n            dispatch({ type: SET_GENDER_OTHER });\n        }\n    };\n\n    return (\n\n        <Card className={classes.root}>\n            <CardMedia\n                className={classes.media}\n                image=\"http://placekitten.com/200/300\"\n                title=\"kitten\"\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Lizard\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Gender</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" ref={genderValue} value={value} onChange={handleChange} row>\n                            <FormControlLabel value=\"female\" control={<Radio color=\"primary\" />} label=\"Female\" />\n                            <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"Male\" />\n                            <FormControlLabel value=\"other\" control={<Radio color=\"primary\" />} label=\"Other\" />\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button} onClick={handleClick}>\n                            Submit\n                        </Button>\n                    </FormControl>\n                </form>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Lizards are a widezspread group of squamate reptiles, with over 6,000 species, ranging\n                    across all continents except Antarctica\n                </Typography>\n            </CardContent>\n        </Card >\n    );\n};","export const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGES_BY_CHAT_ID = \"DELETE_MESSAGES_BY_CHAT_ID\";\nexport const BOT_MESSAGE = \"BOT_MESSAGE\";\n\nexport const addMessage = (message) => ({\n    type: ADD_MESSAGE,\n    payload: message\n});\n\nexport const deleteMessageById = (bothId) => ({\n    type: DELETE_MESSAGE,\n    payload: bothId\n});\n\nexport const deleteMessagesByChatId = (chatId) => ({\n    type: DELETE_MESSAGES_BY_CHAT_ID,\n    payload: chatId\n});\n\nexport const botMessage = (message) => ({\n    type: BOT_MESSAGE,\n    payload: message\n});","import { React } from \"react\";\nimport { HighlightOff } from \"@material-ui/icons\";\nimport { ListItem, Button, Paper } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from \"react-redux\";\nimport { deleteMessageById } from \"../../store/chats/messages/actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(1)\n    },\n    deleteButton: {\n        color: \"red\",\n    }\n}));\n\n\nexport const Message = (props) => {\n    const classes = useStyles();\n    const item = props.item;\n    const id = item.id;\n    const { chatId } = useParams();\n    const bothId = {\n        \"messageId\": id,\n        \"chatId\": chatId\n    };\n    const dispatch = useDispatch();\n    const deleteMessage = () => {\n        dispatch(deleteMessageById(bothId));\n    };\n    return (\n        <ListItem key={item.id}>\n            {item.author}: - <Paper className={classes.paper}>{item.text}</Paper>\n            <Button onClick={deleteMessage}>\n                <HighlightOff className={classes.deleteButton} />\n            </Button>\n        </ListItem>\n    )\n\n};","export const getMessageListRoot = (state) => (state.messages);\nexport const getMessageList = (state) => (getMessageListRoot(state).messageList\n);","import { React } from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport propTypes from \"prop-types\";\nimport { Message } from \"./message\";\nimport { useSelector } from \"react-redux\";\nimport { getMessageList } from \"../../store/chats/messages/selector\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        border: \"none\",\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nexport const MessageList = (props) => {\n    const classes = useStyles();\n    const messageListFull = useSelector(getMessageList);\n    const { chatId } = useParams();\n    const messageList = messageListFull[chatId];\n\n    return (\n        <List className={classes.list}>\n            <Paper>\n                {messageList.map((item) => {\n                    return (\n                        <Message item={item} />\n                    );\n                })}\n            </Paper>\n        </List>)\n};\n\nMessageList.propTypes = {\n    messageList: propTypes.array,\n};","export const getChatListRoot = (state) => (state.chats);\nexport const getChatList = (state) => (getChatListRoot(state).chats);","import { React, useRef, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Paper, InputBase, Button } from \"@material-ui/core\";\nimport { Send } from \"@material-ui/icons\";\nimport { MessageList } from \"./messageList\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { addMessage } from \"../../store/chats/messages/actions\";\nimport { getMessageList } from \"../../store/chats/messages/selector\";\nimport { chatCheckedHOC } from \"../HOCs/dialigHOC\";\nimport { messageFromBotThunk } from \"../../store/middleware/messageFromBotThunk\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingLeft: \"8px\"\n    },\n    input: {\n        flexGrow: 1,\n    },\n}));\n\n\n\nexport const DialogPresent = (chat) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(\"\");\n    const { chatId } = useParams();\n    const [key, setKey] = useState('0');\n    const dispatch = useDispatch();\n    const messageListFull = useSelector(getMessageList);\n    const messageList = messageListFull[chatId];\n    console.log(messageListFull);\n\n    const inputRef = useRef(null);\n    useEffect(() => {\n        inputRef.current.focus();\n    });\n\n    function getMessageId(key) {\n        let id = +key + 1;\n        setKey(id);\n        return id;\n    };\n\n    const sendMessage = (author, text, id, chatId) => {\n        const newMessage = {\n            \"chatId\": chatId,\n            \"id\": id,\n            \"author\": author,\n            \"text\": text\n        };\n        dispatch(addMessage(newMessage));\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        sendMessage(\"Lizard\", value, getMessageId(key), chatId);\n        setValue(\"\");\n    };\n    const onChangeMessageInput = (event) => {\n        setValue(event.target.value);\n    };\n\n    useEffect(() => {\n        console.log(\"THat's useEffect\");\n        if (messageList.length === 0) {\n            return;\n        }\n        const tail = messageList[messageList.length - 1];\n        if (tail.author !== \"Lizard\") {\n            console.log(tail);\n            return;\n        } else {\n            messageFromBotThunk(chat.author, \"Hello\", getMessageId(key), chatId);\n        }\n    }, [messageList]);\n\n\n\n    return (\n        <Grid container\n            justifyContent=\"center\"\n            direction=\"row\"\n        >\n            <Grid item sx={6}>\n                <Button ><Link to=\"/chats\">Back to chats</Link></Button>\n            </Grid>\n            <Grid item sx={6}>\n                <Paper>{chat.author}</Paper>\n\n                <MessageList></MessageList>\n                {//sending message form\n                }\n                <Paper className={classes.paper} component=\"form\" onSubmit={onSubmit}>\n                    <InputBase\n                        inputRef={inputRef}\n                        value={value}\n                        onChange={onChangeMessageInput}\n                        type=\"text\"\n                        className={classes.input}\n                    />\n                    <Button type=\"submit\" className={\"submit\"}>\n                        <Send />\n                    </Button>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport const Dialog = chatCheckedHOC(DialogPresent);","import React from \"react\";\nimport { ListItem, ListItemText, Paper, Button } from \"@material-ui/core\";\nimport { HighlightOff } from \"@material-ui/icons\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(1),\n        flexGrow: 1,\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    deleteButton: {\n        color: \"red\",\n\n    }\n}));\n\nexport const Chat = (props) => {\n    const classes = useStyles();\n    let item = props.item;\n    const updateUserList = props.updateUserList;\n    const deleteChat = () => {\n        updateUserList(item.id);        // передать в updateChatList id чата\n    };\n    return (\n        <ListItem >\n            <Paper className={classes.paper}>\n                <Button onClick={deleteChat}>\n                    <HighlightOff className={classes.deleteButton} />\n                </Button>\n                <ListItemText><Link to={`/chats/${item.id}`}>{item.author}</Link></ListItemText>\n            </Paper>\n        </ListItem>);\n};\n\nChat.propTypes = {\n    item: propTypes.object,\n    updateUserList: propTypes.func,\n};","export const ADD_CHAT = \"ADD_CHAT\";\nexport const DELETE_CHAT = \"DELETE_CHAT\";\n\nexport const addChat = (chat) => ({\n    type: ADD_CHAT,\n    payload: chat\n});\n\nexport const deleteChat = (chatId) => ({\n    type: DELETE_CHAT,\n    payload: chatId\n});","import { React } from \"react\";\nimport { List, Button } from \"@material-ui/core\";\nimport { Chat } from \"./Chat\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addChat, deleteChat } from \"../../store/chats/chat/actions.js\";\nimport { nanoid } from \"nanoid\";\nimport { getChatList } from \"../../store/chats/chat/selectors\";\nimport { deleteMessagesByChatId } from \"../../store/chats/messages/actions\";\n\n\nexport const ChatList = (props) => {\n    const dispatch = useDispatch();\n    const userList = useSelector(getChatList);\n\n    const addNewChat = () => {\n        let id = nanoid();\n        let author = prompt(\"Enter name of user\");\n        let newChat = {\n            \"id\": id,\n            \"author\": author,\n        };\n        dispatch(addChat(newChat));\n    };\n\n    const updateUserList = (chatId) => {\n        dispatch(deleteChat(chatId));\n        dispatch(deleteMessagesByChatId(chatId));\n    };\n\n    return (\n        <>\n            <List>\n                <Button onClick={addNewChat}>Add chat<AddIcon /></Button>\n                {userList.map((item) => {\n                    return (\n                        <Chat key={item.id} item={item} updateUserList={updateUserList} />\n                    )\n                })\n                }\n            </List >\n        </>)\n};","import { Container } from \"@material-ui/core\";\nimport { Header } from \"./components/header.jsx\";\nimport { Main } from \"./components/main.jsx\";\nimport { Profile } from \"./components/profile/profile.jsx\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Dialog } from \"./components/chats/dialog.jsx\";\nimport { ChatList } from \"./components/chats/ChatList.jsx\";\n\nconst useStyles = makeStyles(() => ({\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    }\n}));\n\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <>\n            <Header />\n            <Container className={classes.center}>\n                <Routes>\n                    <Route path=\"/profile\" element={<Profile />} />\n                    <Route exact path=\"/chats/:chatId\" element={<Dialog />} />\n                    <Route exact path=\"/chats\" element={<ChatList />} />\n                    <Route path=\"/\" element={<Main />} />\n                </Routes>\n            </Container>\n        </>\n    );\n};\nexport default App;","import { SET_GENDER_MALE, SET_GENDER_FEMALE, SET_GENDER_OTHER } from \"./action.js\";\nconst initialState = { gender: \"other\" };\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_GENDER_MALE: {\n            return { gender: \"male\" };\n        }\n        case SET_GENDER_FEMALE: {\n            return { gender: \"female\" };\n        }\n        case SET_GENDER_OTHER: {\n            return { gender: \"other\" };\n        }\n        default: {\n            return state;\n        }\n    }\n};","import { ADD_CHAT, DELETE_CHAT } from \"./actions\";\nimport { getChatListRoot } from \"./selectors\";\n\nconst initialState = {\n    chats: [{\n        \"id\": 1,\n        \"author\": \"Ivan Ivanov\"\n    },\n    {\n        \"id\": 2,\n        \"author\": \"Petr Petrov\"\n    },\n    {\n        \"id\": 3,\n        \"author\": \"Maria Murina\",\n    }]\n};\n\nexport const chatReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CHAT:\n            const chatList = getChatListRoot(state);\n            return ({\n                ...state,\n                chats: [...chatList,\n                action.payload]\n            })\n                ;\n        case DELETE_CHAT: {\n            const chatList = getChatListRoot(state);\n            const newChatList = chatList.filter((chat) => chat.id !== action.payload);\n            return {\n                ...state,\n                chats: [...newChatList]\n            };\n        }\n        default:\n            return state;\n    }\n};","import { ADD_MESSAGE, BOT_MESSAGE, DELETE_MESSAGE, DELETE_MESSAGES_BY_CHAT_ID } from \"./actions\";\n\nconst initialState = {\n    messageList: {\n        1: [{\n            \"id\": 0,\n            \"author\": \"Lizard\",\n            \"text\": \"Hello\"\n        },\n        {\n            \"id\": 1,\n            \"author\": \"Ivan Ivanov\",\n            \"text\": \"Hello, Lizard\"\n        }],\n\n        2: []\n    }\n};\n\nexport const messageReduser = (state = initialState, action) => {\n    const messageList = state.messageList;\n    switch (action.type) {\n        case BOT_MESSAGE: {\n            let chatId = action.payload.chatId;\n            const { id, author, text } = action.payload;\n            const newMessage = {\n                \"id\": id,\n                \"author\": author,\n                \"text\": text\n            };\n\n            messageList[chatId] = [\n                ...(messageList[chatId] || []),\n                newMessage\n            ];\n            return ({\n                ...state,\n                messageList\n            });\n        }\n        case ADD_MESSAGE: {\n            let chatId = action.payload.chatId;\n            const { id, author, text } = action.payload;\n            const newMessage = {\n                \"id\": id,\n                \"author\": author,\n                \"text\": text\n            };\n            messageList[chatId] = [\n                ...(messageList[chatId] || []),\n                newMessage\n            ];\n            return ({\n                ...state,\n                messageList\n            });\n        }\n        case DELETE_MESSAGE:\n            const chatIdForDeleteMessage = action.payload.chatId;\n            const messageId = action.payload.messageId;\n            const messageListForDelete = messageList[chatIdForDeleteMessage]; //array\n            const messageIndex = messageListForDelete.findIndex((item) => (item.id == messageId));\n            messageListForDelete.splice(messageIndex, 1);\n            messageList[chatIdForDeleteMessage] = [...messageListForDelete];\n            return ({\n                ...state,\n                messageList\n            });\n\n        case DELETE_MESSAGES_BY_CHAT_ID: {\n            const chatId = action.payload;\n            delete messageList[chatId];\n            return ({\n                ...state,\n                messageList\n            });\n        }\n        default:\n            return state;\n    }\n};","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { profileReducer } from \"./profile/reducer.js\";\nimport { chatReducer } from \"./chats/chat/reducer\";\nimport { messageReduser } from \"./chats/messages/reducer.js\";\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nexport const allReducers = combineReducers({\n    profile: profileReducer,\n    chats: chatReducer,\n    messages: messageReduser\n}\n);\n\nconst persistedReducer = persistReducer(persistConfig, allReducers);\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const Store = createStore(\n    persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\n\nexport const persistor = persistStore(Store);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App.js\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Store, persistor } from \"./store/store.js\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={Store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}